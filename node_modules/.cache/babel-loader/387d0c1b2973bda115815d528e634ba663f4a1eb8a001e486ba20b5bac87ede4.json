{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPropsValues = getPropsValues;\nexports.bindProps = bindProps;\nvar _WatchPrimitiveProperties = require('../utils/WatchPrimitiveProperties');\nvar _WatchPrimitiveProperties2 = _interopRequireDefault(_WatchPrimitiveProperties);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction getPropsValues(vueInst, props) {\n  return Object.keys(props).reduce(function (acc, prop) {\n    if (vueInst[prop] !== undefined) {\n      acc[prop] = vueInst[prop];\n    }\n    return acc;\n  }, {});\n}\n\n/**\n  * Binds the properties defined in props to the google maps instance.\n  * If the prop is an Object type, and we wish to track the properties\n  * of the object (e.g. the lat and lng of a LatLng), then we do a deep\n  * watch. For deep watch, we also prevent the _changed event from being\n  * emitted if the data source was external.\n  */\nfunction bindProps(vueInst, googleMapsInst, props) {\n  var _loop = function (attribute) {\n    var _props$attribute = props[attribute],\n      twoWay = _props$attribute.twoWay,\n      type = _props$attribute.type,\n      trackProperties = _props$attribute.trackProperties,\n      noBind = _props$attribute.noBind;\n    if (noBind) return 'continue';\n    var setMethodName = 'set' + capitalizeFirstLetter(attribute);\n    var getMethodName = 'get' + capitalizeFirstLetter(attribute);\n    var eventName = attribute.toLowerCase() + '_changed';\n    var initialValue = vueInst[attribute];\n    if (typeof googleMapsInst[setMethodName] === 'undefined') {\n      throw new Error(setMethodName + ' is not a method of (the Maps object corresponding to) ' + vueInst.$options._componentTag);\n    }\n\n    // We need to avoid an endless\n    // propChanged -> event emitted -> propChanged -> event emitted loop\n    // although this may really be the user's responsibility\n    if (type !== Object || !trackProperties) {\n      // Track the object deeply\n      vueInst.$watch(attribute, function () {\n        var attributeValue = vueInst[attribute];\n        googleMapsInst[setMethodName](attributeValue);\n      }, {\n        immediate: typeof initialValue !== 'undefined',\n        deep: type === Object\n      });\n    } else {\n      (0, _WatchPrimitiveProperties2.default)(vueInst, trackProperties.map(function (prop) {\n        return attribute + '.' + prop;\n      }), function () {\n        googleMapsInst[setMethodName](vueInst[attribute]);\n      }, vueInst[attribute] !== undefined);\n    }\n    if (twoWay && (vueInst.$gmapOptions.autobindAllEvents || vueInst.$listeners[eventName])) {\n      googleMapsInst.addListener(eventName, function () {\n        // eslint-disable-line no-unused-vars\n        vueInst.$emit(eventName, googleMapsInst[getMethodName]());\n      });\n    }\n  };\n  for (var attribute in props) {\n    var _ret = _loop(attribute);\n    if (_ret === 'continue') continue;\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getPropsValues","bindProps","_WatchPrimitiveProperties","require","_WatchPrimitiveProperties2","_interopRequireDefault","obj","__esModule","default","capitalizeFirstLetter","string","charAt","toUpperCase","slice","vueInst","props","keys","reduce","acc","prop","undefined","googleMapsInst","_loop","attribute","_props$attribute","twoWay","type","trackProperties","noBind","setMethodName","getMethodName","eventName","toLowerCase","initialValue","Error","$options","_componentTag","$watch","attributeValue","immediate","deep","map","$gmapOptions","autobindAllEvents","$listeners","addListener","$emit","_ret"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/homabaytest/county-biller/node_modules/vue2-google-maps/dist/utils/bindProps.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPropsValues = getPropsValues;\nexports.bindProps = bindProps;\n\nvar _WatchPrimitiveProperties = require('../utils/WatchPrimitiveProperties');\n\nvar _WatchPrimitiveProperties2 = _interopRequireDefault(_WatchPrimitiveProperties);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction getPropsValues(vueInst, props) {\n  return Object.keys(props).reduce(function (acc, prop) {\n    if (vueInst[prop] !== undefined) {\n      acc[prop] = vueInst[prop];\n    }\n    return acc;\n  }, {});\n}\n\n/**\n  * Binds the properties defined in props to the google maps instance.\n  * If the prop is an Object type, and we wish to track the properties\n  * of the object (e.g. the lat and lng of a LatLng), then we do a deep\n  * watch. For deep watch, we also prevent the _changed event from being\n  * emitted if the data source was external.\n  */\nfunction bindProps(vueInst, googleMapsInst, props) {\n  var _loop = function (attribute) {\n    var _props$attribute = props[attribute],\n        twoWay = _props$attribute.twoWay,\n        type = _props$attribute.type,\n        trackProperties = _props$attribute.trackProperties,\n        noBind = _props$attribute.noBind;\n\n\n    if (noBind) return 'continue';\n\n    var setMethodName = 'set' + capitalizeFirstLetter(attribute);\n    var getMethodName = 'get' + capitalizeFirstLetter(attribute);\n    var eventName = attribute.toLowerCase() + '_changed';\n    var initialValue = vueInst[attribute];\n\n    if (typeof googleMapsInst[setMethodName] === 'undefined') {\n      throw new Error(setMethodName + ' is not a method of (the Maps object corresponding to) ' + vueInst.$options._componentTag);\n    }\n\n    // We need to avoid an endless\n    // propChanged -> event emitted -> propChanged -> event emitted loop\n    // although this may really be the user's responsibility\n    if (type !== Object || !trackProperties) {\n      // Track the object deeply\n      vueInst.$watch(attribute, function () {\n        var attributeValue = vueInst[attribute];\n\n        googleMapsInst[setMethodName](attributeValue);\n      }, {\n        immediate: typeof initialValue !== 'undefined',\n        deep: type === Object\n      });\n    } else {\n      (0, _WatchPrimitiveProperties2.default)(vueInst, trackProperties.map(function (prop) {\n        return attribute + '.' + prop;\n      }), function () {\n        googleMapsInst[setMethodName](vueInst[attribute]);\n      }, vueInst[attribute] !== undefined);\n    }\n\n    if (twoWay && (vueInst.$gmapOptions.autobindAllEvents || vueInst.$listeners[eventName])) {\n      googleMapsInst.addListener(eventName, function () {\n        // eslint-disable-line no-unused-vars\n        vueInst.$emit(eventName, googleMapsInst[getMethodName]());\n      });\n    }\n  };\n\n  for (var attribute in props) {\n    var _ret = _loop(attribute);\n\n    if (_ret === 'continue') continue;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}