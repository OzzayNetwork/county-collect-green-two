{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport NavigationBar from \"@/components/Navigation\";\nimport { authUrl, execute } from \"@/api\";\nexport default {\n  name: \"LiveMonitoring\",\n  components: {\n    NavigationBar\n  },\n  data() {\n    return {\n      loading: false,\n      // set the initial current page as 1\n      currentPage: 1,\n      // set the total number of pages as 10 (you can change this according to your data source)\n      totalPages: 0,\n      // set the number of items per page as 5 (you can change this according to your preference)\n      pageSize: 10,\n      users: [],\n      message: null\n    };\n  },\n  watch: {\n    //pagination code\n    // define a watcher for the pageSize property\n    pageSize(newPageSize) {\n      this.getBills(\"\");\n      // get the total number of items from your data source (you can change this according to your logic)\n      const totalItems = this.summary.count;\n      // calculate the new total pages by dividing the total items by the new page size and rounding up\n      const newTotalPages = Math.ceil(totalItems / newPageSize);\n      // update the totalPages data property with the new value\n      this.totalPages = newTotalPages;\n      // reset the current page to 1\n      this.currentPage = 1;\n    }\n  },\n  computed: {\n    //pagination code\n    // calculate the start index of the items for the current page\n    startIndex() {\n      return (this.currentPage - 1) * this.pageSize;\n    },\n    // calculate the end index of the items for the current page\n    endIndex() {\n      return this.currentPage * this.pageSize;\n    }\n  },\n  mounted() {\n    this.getUsersBySubCounty();\n  },\n  methods: {\n    //pagination code\n    pagination(currentPage, totalPages, maxVisibleButtons) {\n      //initialize an empty array for the pages\n      let pages = [];\n      //calculate the start and end indices of the visible buttons\n      let start = currentPage - Math.floor(maxVisibleButtons / 2);\n      let end = currentPage + Math.floor(maxVisibleButtons / 2);\n      //adjust the start and end indices if they are out of bounds\n      if (start < 1) {\n        start = 1;\n        end = start + maxVisibleButtons - 1;\n        if (end > totalPages) {\n          end = totalPages;\n        }\n      }\n      if (end > totalPages) {\n        end = totalPages;\n        start = end - maxVisibleButtons + 1;\n        if (start < 1) {\n          start = 1;\n        }\n      }\n      //loop through the start and end indices and push the pages to the array\n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n      //add an ellipsis at the beginning if there are more pages before the start index\n      if (start > 1) {\n        pages.unshift(\"...\");\n      }\n      //add an ellipsis at the end if there are more pages after the end index\n      if (end < totalPages) {\n        pages.push(\"...\");\n      }\n      // return the array of pages\n      return pages;\n    },\n    // define a method to go to the previous page\n    prevPage() {\n      // check if the current page is not the first page\n      if (this.currentPage > 1) {\n        // decrement the current page by 1\n        this.currentPage--;\n        this.getBills(\"\");\n      }\n    },\n    // define a method to go to the next page\n    nextPage() {\n      // check if the current page is not the last page\n      if (this.currentPage < this.totalPages) {\n        // increment the current page by 1\n        this.currentPage++;\n        this.getBills(\"\");\n      }\n    },\n    // define a method to go to a specific page\n    goToPage(page) {\n      // check if the page is valid and not equal to the current page\n      if (page > 0 && page <= this.totalPages && page !== this.currentPage) {\n        // set the current page to the given page\n        this.currentPage = page;\n        this.getBills(\"\");\n      }\n    },\n    //number format\n    numberFormat(num) {\n      const britishNumberFormatter = new Intl.NumberFormat(\"en-GB\");\n      return britishNumberFormatter.format(num);\n    },\n    formatPrice(value) {\n      var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'KES',\n        minimumFractionDigits: 2\n      });\n      return formatter.format(value);\n    },\n    getUsersBySubCounty() {\n      const data = new FormData();\n      data.append(\"function\", \"getUsersMonitoring\");\n      data.append(\"subCountyID\", \"43246\");\n      data.append(\"status\", \"Inactive\");\n      data.append(\"versionCode\", \"35\");\n      data.append(\"page\", this.currentPage);\n      data.append(\"rows_per_page\", this.pageSize);\n      execute(data, authUrl).then(res => {\n        if (res.data.success) {\n          this.users = res.data.data.users;\n        } else {\n          this.message = res.data.message;\n        }\n      }).catch(e => {\n        //alert(e.message);\n        this.message = e.message;\n      });\n    }\n  }\n};","map":{"version":3,"names":["NavigationBar","authUrl","execute","name","components","data","loading","currentPage","totalPages","pageSize","users","message","watch","newPageSize","getBills","totalItems","summary","count","newTotalPages","Math","ceil","computed","startIndex","endIndex","mounted","getUsersBySubCounty","methods","pagination","maxVisibleButtons","pages","start","floor","end","i","push","unshift","prevPage","nextPage","goToPage","page","numberFormat","num","britishNumberFormatter","Intl","NumberFormat","format","formatPrice","value","formatter","style","currency","minimumFractionDigits","FormData","append","then","res","success","catch","e"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/homabaytest/county-biller/src/components/LiveMonitoring.vue"],"sourcesContent":["<template>\n\n\n    <head>\n\n        <meta charset=\"utf-8\" />\n        <title>Desk Birdy | Business Permits</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta content=\"Rental management system by Nouveta LTD\" name=\"description\" />\n        <meta content=\"Kelvin Njuguna\" name=\"author\" />\n        <!-- App favicon -->\n        <link rel=\"shortcut icon\" href=\"assets/images/favicon.svg\">\n        <!-- droping file -->\n        <link href=\"assets/libs/dropzone/min/dropzone.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n\n        <!-- DataTables -->\n        <link href=\"assets/libs/datatables.net-bs4/css/dataTables.bootstrap4.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n        <link href=\"assets/libs/datatables.net-buttons-bs4/css/buttons.bootstrap4.min.css\" rel=\"stylesheet\"\n              type=\"text/css\" />\n\n        <!-- Bootstrap Css -->\n        <link href=\"assets/css/bootstrap.min.css\" id=\"bootstrap-style\" rel=\"stylesheet\" type=\"text/css\" />\n        <!-- Bootstrap select styling -->\n        <link rel=\"stylesheet\"\n              href=\"https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css\">\n        <!-- Icons Css -->\n        <link href=\"assets/css/icons.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n        <!-- App Css-->\n\n        <!-- owl.carousel css -->\n        <link rel=\"stylesheet\" href=\"assets/libs/owl.carousel/assets/owl.carousel.min.css\">\n\n        <link rel=\"stylesheet\" href=\"assets/libs/owl.carousel/assets/owl.theme.default.min.css\">\n\n        <link href=\"assets/css/app.min.css\" id=\"app-style\" rel=\"stylesheet\" type=\"text/css\" />\n        <!-- custom Css-->\n        <link href=\"assets/css/custom.css\" id=\"app-style\" rel=\"stylesheet\" type=\"text/css\" />\n\n    </head>\n\n<body data-sidebar=\"dark\">\n\n\n    <!-- Begin page -->\n    <div id=\"layout-wrapper\">\n\n        <NavigationBar/>\n\n        <!-- ============================================================== -->\n        <!-- Start right Content here -->\n        <!-- ============================================================== -->\n        <div class=\"main-content\">\n\n            <div class=\"page-content\">\n                <div class=\"container-fluid\">\n\n                    <!-- start page title -->\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <div class=\"page-title-box d-sm-flex align-items-center justify-content-between\">\n                                <h4 class=\"mb-sm-0 font-size-18\">Live Monotoring</h4>\n\n                                <div class=\"page-title-right\">\n                                    <ol class=\"breadcrumb m-0\">\n                                        <li class=\"breadcrumb-item\"><a href=\"index.html\">Dashboards</a></li>\n                                        <li class=\"breadcrumb-item\"><a href=\"#\">Live Monitoring</a></li>\n                                         <li class=\"breadcrumb-item\"><a href=\"#\">All Users</a></li>\n\n                                    </ol>\n                                </div>\n\n\n                            </div>\n                        </div>\n                    </div>\n                    <!-- end page title -->\n\n                  <!-- tool bar -->\n                    <div class=\"row\">\n                        <div class=\"col-12 active\">\n                            <div class=\"card active\">\n                                <div class=\"card-body mini-nav bg-primary pt-2 pb-3 active \">\n                                    <nav class=\"navbar navbar-expand-md navbar navbar-dark bg-primary py-2 active\">\n                                        <button\n                                            class=\"navbar-toggler btn btn-sm px-3 font-size-16 header-item waves-effect h-auto text-primary\"\n                                            type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\"\n                                            aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\"\n                                            aria-label=\"Toggle navigation\">\n                                            <span class=\"mdi mdi-menu\"></span>\n                                        </button>\n                                        <div class=\"collapse navbar-collapse justify-content-between active\"\n                                            id=\"navbarNavAltMarkup\">\n                                            <div class=\"navbar-nav\">\n                                                <a class=\"nav-item nav-link\" href=\"live-monitoring.html\">All Users</a>\n                                                <a class=\"nav-item nav-link\" href=\"live-monitoring-active.html\">Active Users</a>\n\n                                                    <a class=\"nav-item nav-link\" href=\"live-monitoring-dormant.html\">Dormant Users</a>\n                                                <a class=\"nav-item nav-link\" href=\"live-monitoring-out.html\">Logged Out Users</a>\n                                                <a class=\"nav-item nav-link\" href=\"live-monitoring-never.html\">Never Logged In</a>\n\n                                            </div>\n\n\n                                        </div>\n                                    </nav>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                    <!-- end of toolbar -->\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <div class=\"card\">\n                                <div\n                                    class=\"card-header bg-white pt-0 pr-0 p-0 d-flex justify-content-between align-items-center w-100 border-bottom\">\n\n                                    <div class=\"btn-toolbar p-3 d-flex justify-content-between align-items-center\"\n                                        role=\"toolbar\">\n                                        <h4 class=\"card-title text-capitalize mb-0 \">\n                                            All users\n                                        </h4>\n                                    </div>\n                                    <div class=\"d-flex align-items-center justify-content-center p-3\"  role=\"toolbar\">\n\n\n                                        <label class=\"text-nowrap mb-0 mx-2\">System Roles:</label>\n                                        <select class=\"form-select\" title=\"Select Subcounty\">\n                                            <option>All Roles</option>\n                                            <option>Revenue Collectors</option>\n                                            <option>Revenue Inspectors</option>\n                                            <option>Revenue Enforcers</option>\n                                            <option>Revenue Officers</option>\n                                        </select>\n\n                                        <select class=\"form-select mx-3\" title=\"Select Subcounty \">\n                                            <option>All of Sub counties</option>\n                                            <option>Homabay Town</option>\n                                            <option>Ndhiwa</option>\n                                            <option>...</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div class=\"card-body\">\n                                    <div class=\"table-responsive \">\n\n                                        <table class=\"table align-middle table-hover  contacts-table table-striped \"\n                                            id=\"datatable-buttons\">\n                                            <thead class=\"table-light\">\n                                                <tr class=\"table-dark\">\n                                                    <th scope=\"col\">#</th>\n                                                    <th scope=\"col\">User</th>\n                                                    <th scope=\"col\">Phone No.</th>\n                                                    <th>Status</th>\n                                                    <th>Idle Time</th>\n                                                    <th scope=\"col\">Log ins</th>\n                                                    <th scope=\"col\">Pending Bills</th>\n                                                    <th scope=\"col\">Receipted Bills</th>\n                                                    <th scope=\"col\">Inspections</th>\n                                                    <th scope=\"col\" class=\"text-right\">Value Of Inspections</th>\n                                                    <th scope=\"col\" class=\"text-right\">Value Of Collections</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr v-for=\"(item, index) in users\" :value=\"item\" :key=\"index\">\n                                                    <td class=\"text-capitalize text-nowrap\">{{index+1}}</td>\n                                                    <td class=\"text-capitalize text-nowrap\">\n                                                        <p class=\"mb-0\">{{item.names}}</p>\n                                                        <small>Revenue Collector</small>\n                                                    </td>\n                                                    <td class=\"text-capitalize text-nowrap\">\n                                                        <a href=\"tel:{{item.phoneNumber}}\">{{item.phoneNumber}}</a>\n                                                    </td>\n                                                    <td>\n                                                        <span class=\"text-uppercase badge badge-soft-success\">online</span>\n                                                    </td>\n                                                    <td>0 Min</td>\n                                                   <td>{{item.logins}}</td>\n                                                   <td>4</td>\n                                                   <td>45</td>\n                                                    <td>{{item.inspections}}</td>\n                                                    <td class=\"text-right text-uppercase fw-semibold\">KES 0</td>\n                                                    <td class=\"text-right text-uppercase fw-semibold\">kes 0</td>\n                                                </tr>\n\n                                            </tbody>\n                                            <tfoot class=\"table-dark\">\n                                                <tr>\n                                                    <th  colspan=\"4\">0 Users</th>\n                                                    <th>0 Min</th>\n                                                    <td>0</td>\n                                                    <td>0</td>\n                                                    <td>0</td>\n                                                    <td>0</td>\n                                                    <th class=\"text-right\">KES 0.0</th>\n                                                    <th class=\"text-right\">KES 0.0</th>\n                                                </tr>\n\n                                            </tfoot>\n                                        </table>\n\n                                        <div v-if=\"loading\" class=\"card-body px-5 d-flex flex-column justify-items-center align-items-center text-center d-flex justify-content-center\">\n                                            <div class=\"p-5 py-0 pt-3\">\n                                                <div class=\"p-5\">\n                                                    <div class=\"spinner-border text-info m-1\" role=\"status\">\n                                                        <span class=\"sr-only text-uppercase\">Loading...</span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <h4 class=\"text-uppercase\">Loading Data</h4>\n                                            <div class=\"col-sm-12 col-md-8 col-lg-5\">\n                                                <p>We are fetching the data for you. It will be ready soon. Please wait and have fun. Thank you for your interest.</p>\n\n                                            </div>\n                                        </div>\n                                        <div v-if=\"users.length<1 & loading===false\" class=\"card-body d-sm-none d-md-block px-5 d-flex flex-column justify-items-center align-items-center text-center\">\n                                            <div class=\"p-5 py-0 pt-3\">\n                                                <img :src=\"'./assets/images/no-results.png'\" class=\"img mb-4\"  alt=\"No search results\"/>\n                                            </div>\n                                            <h4>No Results To Show</h4>\n                                            <p>Sorry, we could not find any results that match your search or filter criteria. Please try using different keywords or filters.</p>\n                                        </div>\n\n                                    </div>\n                                </div>\n                                <div class=\"card-footer bg-white\">\n                                    <nav aria-label=\"Page navigation example \"\n                                         class=\"d-flex align-items-center justify-content-between\">\n\n                                        <div class=\"d-flex align-items-center\">\n                                            <span class=\"pr-3 pb-0 mb-0 font-13px\">\n                                                <span>Rows Per Page</span>\n                                            </span>\n                                            <select class=\"form-select w-auto font-13px \" v-model=\"pageSize\">\n                                                <option value=\"10\">10 Rows</option>\n                                                <option value=\"25\">25 Rows</option>\n                                                <option value=\"50\">50 Rows</option>\n                                                <option value=\"100\">100 Rows</option>\n                                                <option value=\"150\">150 Rows</option>\n                                                <option value=\"200\">200 Rows</option>\n                                            </select>\n                                        </div>\n\n                                        <ul class=\"pagination\">\n                                            <!-- add a class of disabled and an attribute of disabled when the current page is the first page -->\n                                            <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\n                                                <a class=\"page-link\" tabindex=\"-1\" @click=\"prevPage\" :disabled=\"currentPage === 1\">Previous</a>\n                                            </li>\n                                            <!-- replace the v-for directive with the pagination function call -->\n                                            <li v-for=\"page in pagination(currentPage, totalPages, 3)\" :key=\"page\" class=\"page-item\" :class=\"{ active: currentPage === page }\">\n                                                <!-- check if the page is an ellipsis and display it as plain text -->\n                                                <span v-if=\"page === '...'\" class=\"page-link\">{{ page }}</span>\n                                                <!-- otherwise, display it as a clickable link -->\n                                                <a v-else class=\"page-link\" @click=\"goToPage(page)\">{{ page }}</a>\n                                            </li>\n                                            <!-- add a class of disabled and an attribute of disabled when the current page is the last page -->\n                                            <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\n                                                <a class=\"page-link\"  @click=\"nextPage\" :disabled=\"currentPage === totalPages\">Next</a>\n                                            </li>\n                                        </ul>\n\n\n                                    </nav>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- end col -->\n                    </div>\n\n                    <!-- end row -->\n                </div>\n                <!-- container-fluid -->\n            </div>\n            <!-- End Page-content -->\n\n            <footer class=\"footer \">\n                <div class=\"container-fluid \">\n                    <div class=\"row \">\n                        <div class=\"col-sm-6 \">\n                             ©county\n    </div>\n    <div class=\"col-sm-6 \">\n        <div class=\"text-sm-end d-sm-block \">\n             County Government\n        </div>\n    </div>\n    </div>\n    </div>\n    </footer>\n    </div>\n    <!-- end main content-->\n\n    </div>\n    <!-- END layout-wrapper -->\n\n    <!-- Right bar overlay-->\n    <div class=\"rightbar-overlay \"></div>\n\n\n    </body>\n\n\n</template>\n\n<script>\n    import NavigationBar from \"@/components/Navigation\";\n    import {authUrl, execute} from \"@/api\";\n    export default {\n        name: \"LiveMonitoring\",\n        components: {NavigationBar},\n        data(){\n            return{\n                loading: false,\n                // set the initial current page as 1\n                currentPage: 1,\n                // set the total number of pages as 10 (you can change this according to your data source)\n                totalPages: 0,\n                // set the number of items per page as 5 (you can change this according to your preference)\n                pageSize: 10,\n\n                users:[],\n                message:null\n            }\n        },\n        watch: {\n            //pagination code\n            // define a watcher for the pageSize property\n            pageSize(newPageSize) {\n                this.getBills(\"\")\n                // get the total number of items from your data source (you can change this according to your logic)\n                const totalItems = this.summary.count;\n                // calculate the new total pages by dividing the total items by the new page size and rounding up\n                const newTotalPages = Math.ceil(totalItems / newPageSize);\n                // update the totalPages data property with the new value\n                this.totalPages = newTotalPages;\n                // reset the current page to 1\n                this.currentPage = 1;\n\n            }\n\n        },\n        computed: {\n            //pagination code\n            // calculate the start index of the items for the current page\n            startIndex() {\n                return (this.currentPage - 1) * this.pageSize;\n            },\n            // calculate the end index of the items for the current page\n            endIndex() {\n                return this.currentPage * this.pageSize;\n            }\n        },\n        mounted() {\n            this.getUsersBySubCounty()\n        },\n        methods:{\n            //pagination code\n            pagination(currentPage, totalPages, maxVisibleButtons) {\n                //initialize an empty array for the pages\n                let pages = [];\n                //calculate the start and end indices of the visible buttons\n                let start = currentPage - Math.floor(maxVisibleButtons / 2);\n                let end = currentPage + Math.floor(maxVisibleButtons / 2);\n                //adjust the start and end indices if they are out of bounds\n                if (start < 1) {\n                    start = 1;\n                    end = start + maxVisibleButtons - 1;\n                    if (end > totalPages) {\n                        end = totalPages;\n                    }\n                }\n                if (end > totalPages) {\n                    end = totalPages;\n                    start = end - maxVisibleButtons + 1;\n                    if (start < 1) {\n                        start = 1;\n                    }\n                }\n                //loop through the start and end indices and push the pages to the array\n                for (let i = start; i <= end; i++) {\n                    pages.push(i);\n                }\n                //add an ellipsis at the beginning if there are more pages before the start index\n                if (start > 1) {\n                    pages.unshift(\"...\");\n                }\n                //add an ellipsis at the end if there are more pages after the end index\n                if (end < totalPages) {\n                    pages.push(\"...\");\n                }\n// return the array of pages\n                return pages;\n            },\n            // define a method to go to the previous page\n            prevPage() {\n                // check if the current page is not the first page\n                if (this.currentPage > 1) {\n                    // decrement the current page by 1\n                    this.currentPage--;\n                    this.getBills(\"\")\n                }\n            },\n            // define a method to go to the next page\n            nextPage() {\n                // check if the current page is not the last page\n                if (this.currentPage < this.totalPages) {\n                    // increment the current page by 1\n                    this.currentPage++;\n                    this.getBills(\"\")\n                }\n            },\n            // define a method to go to a specific page\n            goToPage(page) {\n                // check if the page is valid and not equal to the current page\n                if (page > 0 && page <= this.totalPages && page !== this.currentPage) {\n                    // set the current page to the given page\n                    this.currentPage = page;\n                    this.getBills(\"\")\n                }\n            },\n\n            //number format\n            numberFormat(num) {\n                const britishNumberFormatter = new Intl.NumberFormat(\"en-GB\");\n                return britishNumberFormatter.format(num)\n            },\n            formatPrice(value) {\n                var formatter = new Intl.NumberFormat('en-US', {\n                    style: 'currency',\n                    currency: 'KES',\n                    minimumFractionDigits: 2\n                });\n                return formatter.format(value);\n            },\n            getUsersBySubCounty(){\n                const data = new FormData();\n                data.append(\"function\", \"getUsersMonitoring\");\n                data.append(\"subCountyID\", \"43246\");\n                data.append(\"status\", \"Inactive\");\n                data.append(\"versionCode\", \"35\");\n                data.append(\"page\", this.currentPage);\n                data.append(\"rows_per_page\", this.pageSize);\n                execute(data,authUrl)\n                    .then((res) =>{\n                        if (res.data.success) {\n                            this.users = res.data.data.users\n                        }else{\n                            this.message =res.data.message\n                        }\n                    })\n                    .catch((e) => {\n                        //alert(e.message);\n                        this.message =e.message\n                    });\n\n            }\n\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}