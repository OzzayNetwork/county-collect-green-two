import { Component, DefineComponent } from "vue";
import { type ComponentProps } from "./Modal";
export declare function useModalProvider(): {
    modalList: import("vue").ComputedRef<{
        comp: Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>;
        args?: any;
        visible: boolean;
        id: string;
    }[]>;
};
export declare function createdModalContext(): {
    ModalContent: DefineComponent<{}, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{}>>, {}>;
};
export declare function useModal<T extends Component>(modal: T, args?: ComponentProps<T>): {
    show: (showArgs?: ComponentProps<T> | undefined) => Promise<unknown>;
    hide: () => void | undefined;
};
export declare function useModalRef(): {
    show: (args?: unknown) => void | undefined;
    hide: () => void | undefined;
    visible: import("vue").Ref<boolean>;
    args: import("vue").Ref<any>;
    remove: () => void | undefined;
    resolve: (args?: unknown) => void;
    reject: (args?: unknown) => void;
};
